---
- hosts: localhost
  collections:   amazon.aws
  vars: 
      aws_region: "{{ aws_default_region }}"
  # All your funky variables are loaded by this role
  roles: 
     - shc4hpc_aws

  tasks:

  - name: gather information about an AMI using ami-id
    amazon.aws.ec2_ami_info:
        aws_region: "{{ aws_default_region }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        filters:
                name:   "{{ aws_goldenimage }}"
    register: amis
  - name: create key pair using provided key_material
    amazon.aws.ec2_key:
        name: "{{ aws_ssh_key_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        key_material: "{{ ssh_key }}"
        aws_region: "{{ aws_default_region }}"
  - name: find default vpc if one is not set in config
    when: aws_vpc_name is not defined and aws_vpc_id is not defined and aws_use_default_vpc
    amazon.aws.ec2_vpc_net_info:
       filters:
         isDefault: True
    register: aws_vpc_default
  - name: find vpc if one is set in config by name
    when: aws_vpc_name is defined and aws_vpc_id is not defined
    amazon.aws.ec2_vpc_net_info:
       filters:
         "tag:Name": "{{ aws_vpc_name }}"
    register: aws_vpc_named
  - name: Debug VPC 
    debug:
        msg: "VPC: {{ aws_vpc_default }}"
  - name: derive vpc id from vpc default dictionary
    when: aws_vpc_id is not defined and aws_vpc_default is not skipped
    set_fact:
        aws_vpc_id: "{{ aws_vpc_default.vpcs.0.vpc_id }}"
  - name: debug
    debug:
      msg: "{{ aws_vpc_named }}"
  - name: check something was returned
    fail:
      msg: "A name for vpc in variable aws_vpc_name was specified, but I could not find that name ({{ aws_vpc_name }}) in your VPCs in region {{ aws_default_region }}"
    when: aws_vpc_named is not skipped and aws_vpc_named.vpcs | length != 1
  - name: check something was returned
    fail:
      msg: "A default VPC was requested, but you dont have one in region {{ aws_default_region }}"
    when: aws_vpc_default is not skipped and aws_vpc_default.vpcs | length != 1
  - name: derive vpc id fron vpc dictionary
    when: aws_vpc_id is not defined and aws_vpc_named is not skipped 
    set_fact:
        aws_vpc_id: "{{ aws_vpc_named.vpcs.0.vpc_id }}"

  - name: Debug VPC ID
    debug:
        msg: "{{ aws_vpc_id }}"
  - name: create security group
    amazon.aws.ec2_group:
        name: "{{ aws_compute_group }}"
        description: compute security group
        vpc_id: "{{ aws_vpc_id }}" 
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{ aws_default_region }}"
        rules:
            - proto: tcp
              ports:
              - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on port 22
  - name: Create subnet for compute servers
    amazon.aws.ec2_vpc_subnet:
        state: present
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        aws_region: "{{ aws_default_region }}"
        vpc_id: "{{ aws_vpc_id }}"
        cidr: "{{ aws_subnet }}"
        tags:
          Name: "{{ aws_subnet_name }}"
    register: aws_subnet
  - name: debug ami image
    debug: 
        msg: "{{ (amis.images | sort(attribute='creation_date') | last).image_id }}"
  - name: debug subnet image
    debug: 
        msg: "{{ aws_subnet }}"
  - set_fact:
       aws_image_id: "{{ (amis.images | sort(attribute='creation_date') | last).image_id }}"
  - name: set derived variables for other ansible playbooks
    template:
        src: shc4hpc_aws.yml.j2
        dest: "{{ shc4hpcbase }}/etc/shc4hpc/aws.yml"
 
        
     

